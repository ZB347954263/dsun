<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsunsoft.modules.basic.mapper.ProjectMapper">
    
	<sql id="projectColumns">
		a.id AS "id",
		a.project_name AS "projectName",
		a.project_content AS "projectContent",
		a.require_date AS "requireDate",
		a.expect_date AS "expectDate",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="projectJoins">
		
	</sql>
	
    
	<select id="get" resultType="Project" >
		SELECT 
			<include refid="projectColumns"/>
		FROM project a
		<include refid="projectJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Project" >
		SELECT 
			<include refid="projectColumns"/>
		FROM project a
		<include refid="projectJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="projectName != null and projectName != ''">
				AND a.project_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{projectName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{projectName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{projectName},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Project" >
		SELECT 
			<include refid="projectColumns"/>
		FROM project a
		<include refid="projectJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO project(
			project_name,
			project_content,
			require_date,
			expect_date,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{projectName},
			#{projectContent},
			#{requireDate},
			#{expectDate},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE project SET 	
			project_name = #{projectName},
			project_content = #{projectContent},
			require_date = #{requireDate},
			expect_date = #{expectDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM project
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE project SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Project" statementType="STATEMENT">
		select * FROM project  where ${propertyName} = '${value}'
	</select>
	
</mapper>