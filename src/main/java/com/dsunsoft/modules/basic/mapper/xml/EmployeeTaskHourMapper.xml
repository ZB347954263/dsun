<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsunsoft.modules.basic.mapper.EmployeeTaskHourMapper">
    
	<sql id="employeeTaskHourColumns">
		a.id AS "id",
		a.task_id AS "taskId",
		a.date AS "date",
		a.hour AS "hour",
		a.notes AS "notes",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		b.task_name AS "taskName",
		user.name AS "createBy.name"
	</sql>
	
	<sql id="employeeTaskHourJoins">
		left join employee_task b on a.task_id = b.id
		LEFT JOIN sys_user user ON user.id = a.create_by
	</sql>
	
    
	<select id="get" resultType="EmployeeTaskHour" >
		SELECT 
			<include refid="employeeTaskHourColumns"/>
		FROM employee_task_hour a
		<include refid="employeeTaskHourJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="EmployeeTaskHour" >
		SELECT 
			<include refid="employeeTaskHourColumns"/>
		FROM employee_task_hour a
		<include refid="employeeTaskHourJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="taskId != null and taskId != ''">
				AND a.task_id = #{taskId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="EmployeeTaskHour" >
		SELECT 
			<include refid="employeeTaskHourColumns"/>
		FROM employee_task_hour a
		<include refid="employeeTaskHourJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO employee_task_hour(
			task_id,
			date,
			hour,
			notes,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{taskId},
			#{date},
			#{hour},
			#{notes},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE employee_task_hour SET 	
			task_id = #{taskId},
			date = #{date},
			hour = #{hour},
			notes = #{notes},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM employee_task_hour
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE employee_task_hour SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="EmployeeTaskHour" statementType="STATEMENT">
		select * FROM employee_task_hour  where ${propertyName} = '${value}'
	</select>
	
	<select id="getTaskHour" resultType="java.math.BigDecimal">
		select sum(hour) from employee_task_hour where task_id = #{taskId}
	</select>
</mapper>